import { type NextPage } from "next";
import Head from "next/head";
import { Avatar, Loader } from "@mantine/core";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import updateLocale from "dayjs/plugin/updateLocale";

import CreatePostWizard from "~/components/CreatePostWizard";
import SessionUI from "~/components/SessionUI";
import { type RouterOutputs, api } from "~/utils/api";

dayjs.extend(relativeTime);
dayjs.extend(updateLocale);

dayjs.updateLocale("en", {
  relativeTime: {
    future: "in %s",
    past: "%s ago",
    s: "%ds",
    m: "m",
    mm: "%dm",
    h: "h",
    hh: "%dh",
    d: "d",
    dd: "%dd",
    M: "m",
    MM: "%dm",
    y: "y",
    yy: "%dy",
  },
});

const Home: NextPage = () => {
  const hello = api.posts.getAll.useQuery();
  const { data, isLoading } = hello;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col items-center bg-gradient-to-tr from-[#8EC5FC] to-[#E0C3FC]">
        <div className="container relative flex min-h-screen flex-col items-center gap-12 px-4 py-16">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            <span className="inline-block text-violet-600">Jesolo</span> App
          </h1>

          <section className="glass relative w-full max-w-3xl flex-grow space-y-4 rounded-xl px-8 py-4">
            {isLoading ? (
              <div className="absolute inset-0 flex h-full w-full items-center justify-center">
                <Loader color="indigo" />
              </div>
            ) : (
              <>
                <SessionUI />
                <CreatePostWizard />
                <div className="grid grid-cols-1 justify-items-center gap-4">
                  {data?.map(({ post, author }) => (
                    <PostView key={post.id} author={author} post={post} />
                  ))}
                </div>
              </>
            )}
          </section>
        </div>
      </main>
    </>
  );
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithAuthor) => {
  const { author, post } = props;
  const timeAgo = dayjs(post.createdAt).fromNow(true);
  return (
    <div className="glass flex w-full items-start gap-2 rounded-xl px-4 py-4">
      <div>
        <Avatar
          src={author?.profileImageUrl}
          radius="lg"
          alt="post's author profile picture"
        />
      </div>
      <div>
        <span className="font-bold text-indigo-800">{author?.firstName}</span>
        <> </>
        <span className="font-light text-slate-600">@{author?.username}</span>
        <span className="text-slate-600"> Â· </span>
        <span className="font-light text-slate-600">{timeAgo}</span>
        <p>{post.content}</p>
      </div>
    </div>
  );
};

export default Home;
